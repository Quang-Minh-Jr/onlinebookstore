pipeline {
    agent any
    environment {                 
        WARFILENAME = ""
    }
    stages {
        stage('Build') {
            agent {
                // assign packaging job for slave to execute
                label 'java_slave_container'
            }
            steps {
                //maven compile  with shell command
                sh 'mvn compile'
                //test with maven compile
                sh 'mvn test'
            }
        }
        
        stage('Package') {
            // agent {
            //     // assign packaging job for slave to execute
            //     label ''
            // }
            steps {                
                //package
                sh 'mvn package'
                //Verify
                sh 'mvn verify'
                //Get the name of war file and Change the environment variables
                script {
                    WARFILENAME=${sh "ls /var/lib/jenkins/workspace/${env.JOB_NAME}/target| grep war"}
                    echo "WAR file name is: " ${WARFILENAME}
                }
            }
        }
        
        stage('Deploy') {
            // agent {
            //     // assign packaging job for slave to execute
            //     label ''
            // }
            steps {
                echo 'ready to deploy'
                // Get the war file path
                
                sh "cp /var/lib/jenkins/workspace/${env.JOB_NAME}/target/${WARFILENAME} ."
                // build the image with war file path "warfile"
                sh "docker build -t tomcatserver:v1 \
                        --build-arg warfile=${WARFILENAME} ."
                // Run the docker container with new image
                sh 'docker run -it --name onlinebookstore -p 8686:8080 tomcatserver:v1'
            }
        }
    }
    post{
        always{
            cleanWS()
        }
    }
}
